<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>${groupId}</groupId> <!-- recommended to use only lowercase. -->
	<artifactId>${artifactId}</artifactId> <!-- this value must be completly lowercase. -->
	<version>${version}</version>
	<packaging>jar</packaging>

	<!-- here defines the project information all them are optional -->
	<name>${name}</name>
	<description></description> <!-- a short description of the project -->
	<url></url>
	<inceptionYear></inceptionYear> <!-- the year when the project was first created -->
    <licenses></licenses>
	<organization></organization>
    <developers></developers>
    <contributors></contributors>

	<!-- constants for the project -->
	<properties>
	
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- the main class to run if you are developing a library then you can just let it blank.
			 if the value of this field is blank then the 'Class-Name' key of the manifest file will not be
			 included but the jar still will be generated. -->
		<mainClass></mainClass>
		
		<!-- the version of java which you want to compile for. -->
		<javaVersion>${javaVersion}</javaVersion>
		
	</properties>
	
	<dependencyManagement></dependencyManagement>
	<modules></modules>
	
	<!-- the dependencies of the project. -->
	<dependencies></dependencies>

	<!-- build settings -->
	<build>
		<plugins>

			<plugin> <!-- plugin to configure the maven compilation process. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>

			<plugin> <!-- plugin to generate an executable jar with dependencies (fatJar).
						  the generated jar file will not be uploaded during the 'deploy' phase. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-${project.version}-withDependencies</finalName>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${mainClass}</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin> <!-- plugin to generate the javadoc during the package phase. the generated javadoc will be deployed (uploaded)
						  too to the cloud during the 'deploy' phase. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<reporting></reporting>
	
	<!-- Environment Settings -->
	<issueManagement></issueManagement>
	<ciManagement></ciManagement>
	<mailingLists></mailingLists>
	<scm></scm>
	<prerequisites></prerequisites>
	<repositories></repositories>
	<pluginRepositories></pluginRepositories>
	<distributionManagement></distributionManagement>
	<profiles></profiles>
</project>
